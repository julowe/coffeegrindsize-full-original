name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: read
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-11]
        include:
          - os: ubuntu-latest
            platform_name: Linux
            artifact_name: coffeegrindsize-linux
            executable_ext: ''
          - os: windows-latest
            platform_name: Windows
            artifact_name: coffeegrindsize-windows
            executable_ext: '.exe'
          - os: macos-latest
            platform_name: macOS
            artifact_name: coffeegrindsize-macos
            executable_ext: '.app'
            macos_deployment_target: '13.0'
          - os: macos-11
            platform_name: macOS-11
            artifact_name: coffeegrindsize-macos-11
            executable_ext: '.app'
            macos_deployment_target: '11.0'

    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build executable (Windows/Linux)
      if: matrix.os != 'macos-latest' && matrix.os != 'macos-11'
      run: |
        pyinstaller --name=coffeegrindsize --windowed --onefile --icon=NONE coffeegrindsize.py

    - name: Build executable (macOS)
      if: matrix.os == 'macos-latest' || matrix.os == 'macos-11'
      env:
        MACOSX_DEPLOYMENT_TARGET: ${{ matrix.macos_deployment_target }}
      run: |
        pyinstaller --name=coffeegrindsize --windowed --onedir coffeegrindsize.py

    - name: Package for Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd dist
        tar -czf coffeegrindsize-linux.tar.gz coffeegrindsize
        cd ..

    - name: Package for Windows
      if: matrix.os == 'windows-latest'
      run: |
        cd dist
        Compress-Archive -Path coffeegrindsize.exe -DestinationPath coffeegrindsize-windows.zip
        cd ..

    - name: Package for macOS
      if: matrix.os == 'macos-latest' || matrix.os == 'macos-11'
      run: |
        cd dist
        # Create a zip of the .app bundle
        zip -r ${{ matrix.artifact_name }}.zip coffeegrindsize.app
        cd ..

    - name: Upload artifact (Linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/coffeegrindsize-linux.tar.gz

    - name: Upload artifact (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/coffeegrindsize-windows.zip

    - name: Upload artifact (macOS)
      if: matrix.os == 'macos-latest' || matrix.os == 'macos-11'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/${{ matrix.artifact_name }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/coffeegrindsize-linux/coffeegrindsize-linux.tar.gz
          artifacts/coffeegrindsize-windows/coffeegrindsize-windows.zip
          artifacts/coffeegrindsize-macos/coffeegrindsize-macos.zip
          artifacts/coffeegrindsize-macos-11/coffeegrindsize-macos-11.zip
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
